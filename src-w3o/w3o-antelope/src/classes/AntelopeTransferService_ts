import {
    Logger,
    LoggerContext,
    W3oInstance,
    W3oModule,
    W3oService,
} from "@vapaee/w3o-core";
import { AntelopeTokensService } from "./AntelopeTokensService";
import { AntelopeBalancesService } from "./AntelopeBalancesService";

const logger = new Logger('AntelopeTransferService');
export class AntelopeTransferService extends W3oService {

    // Other services ------
    private tokens!: AntelopeTokensService;
    private balances!: AntelopeBalancesService;

    constructor(
        path: string,
        parent: LoggerContext
    ) {
        const context = logger.method('constructor', {path}, parent);
        super(path, context);
    }

    // Module id ------
    override get w3oVersion(): string {
        return '0.1.0';
    }
    override get w3oName(): string {
        return 'antelope.service.transfer';
    }
    override get w3oRequire(): string[] {
        return [
            'antelope.service.tokens@0.1.0',
            'antelope.service.balances@0.1.0',
        ];
    }

    // Module init ------
    override init(octopus: W3oInstance, requirements: W3oModule[], parent: LoggerContext): void {
        const context = logger.method('init', { octopus, requirements }, parent);
        super.init(octopus, requirements, context);
        this.tokens = this.requirements[0] as unknown as AntelopeTokensService;
        this.balances = this.requirements[1] as unknown as AntelopeBalancesService;
        context.info('AntelopeTransferService OK!', { w3oId: super.w3oId, tokens: this.tokens, balances: this.balances });
    }

    // Module methods ------
    override snapshot(): any {
        return {
            ... super.snapshot(),
            _class: 'AntelopeTransferService',
        };
    }
}
